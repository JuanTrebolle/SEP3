@using Client.Data.Authentication
@using LoginComponent
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="top-row pl-4 navbar">
	<a class="navbar-brand" href="">Mapper</a>
	<button class="navbar-toggler" @onclick="ToggleNavMenu">
		<span class="navbar-toggler-icon"></span>
	</button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
	<ul class="nav flex-column">

		<li class="nav-item px-3">
			<NavLink class="nav-link" href="" Match="NavLinkMatch.All">
				<span class="oi oi-globe" aria-hidden="true"></span> Map
			</NavLink>
		</li>

		<AuthorizeView>
			<NotAuthorized>
				<li class="nav-item px-3">
					<NavLink class="nav-link" href="login">
						<span class="oi oi-account-login" aria-hidden="true"></span>Login
					</NavLink>
				</li>

				<li class="nav-item px-3">
					<NavLink class="nav-link" href="register">
						<span class="oi oi-key" aria-hidden="true"></span>Register
					</NavLink>
				</li>
			</NotAuthorized>
		</AuthorizeView>

		<AuthorizeView Policy="Moderator">
			<li class="nav-item px-3">
				<NavLink class="nav-link" href="/reports">
					<span class="oi oi-list-rich" aria-hidden="true"></span>Reports
				</NavLink>
			</li>
		</AuthorizeView>

		<AuthorizeView>
			<Authorized>
				<li class="nav-item px-3">
                					<NavLink class="nav-link" href="/profile" >
                						<span class="oi oi-person" aria-hidden="true"></span>Profile
                					</NavLink>
                				</li>
				<li class="nav-item px-3">
					<NavLink class="nav-link logout" href="/" @onclick="PerformLogout">
						<span class="oi oi-account-logout" aria-hidden="true"></span>Log out
					</NavLink>
				</li>
			</Authorized>
		</AuthorizeView>
	</ul>
</div>

@code {

	private bool collapseNavMenu = true;

	private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

	private void ToggleNavMenu()
	{
		collapseNavMenu = !collapseNavMenu;
	}

	public void PerformLogout()
	{
		try
		{
			((CustomAuthenticationStateProvider)AuthenticationStateProvider).Logout();
		}
		catch (Exception e)
		{
			throw e;
		}
	}

}
