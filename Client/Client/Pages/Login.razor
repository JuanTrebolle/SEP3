@page "/login"
@using Client.Data.Networking
@using Client.Data.Authentication
@namespace LoginComponent


@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager



<h3>Login v1</h3>

<AuthorizeView>
  <NotAuthorized>
    <div class="form-group">
      <label>User name:</label>
      <input type="text" placeholder="user name" @bind-value="username"/>
    </div>
    <div class="form-group">
      <label>Password</label>
      <input type="text" placeholder="password" @bind-value="password">
    </div>
    
    <div style="color:red">@errorMessage</div>
    
    <a href="" @onclick="PerfomLogin">Login</a>
    <a href="" @onclick="PerformRegister">
      Register
    </a>
  </NotAuthorized>
  
</AuthorizeView>



@code {
  private string username;
  private string password;
  private string errorMessage;

  public async Task PerfomLogin()
  {
    errorMessage = "";
    try
    {
await ((CustomAuthenticationStateProvider)AuthenticationStateProvider).ValidateLogin(username,password);
      username = "";
      password = "";
      NavigationManager.NavigateTo("/");
    }
    catch (Exception e)
    {
      errorMessage = e.Message;
    }
  }

  public async Task PerformLogout()
  {
    errorMessage = "";
    username = "";
    password = "";
    try
    {
      ((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
      NavigationManager.NavigateTo("/");
    }
    catch (Exception e)
    {
      errorMessage = e.Message;
    }
  }
  
  public async Task PerformRegister()
  {
    errorMessage = "";
    try
    {
      NavigationManager.NavigateTo("/register");
    }
    catch (Exception e)
    {
      errorMessage = e.Message;
    }
  }
  

}