@page "/place/{placeid}"
@using Radzen.Blazor
@using Client.Models
@inject Client.Data.IModel Model
@inject Client.Data.IMap Map

<div class="page-container">
    <div class="place-first-row">
        <p class="place-title">
            @place.title
        </p>
        <RadzenRating id="radzen-rating" Change=@(v => OnChange(v, "Rating with 5 stars")) />
    </div>

    <div id="title-separator"></div>

    <div class="place-section">
        <div id="place-description">
            <h3>/ Description /</h3>
            <p>@place.description</p>
        </div>
        <div id="place-reviews">
            <h3>/ Comments /</h3>
        </div>
    </div>
    <div id='map'></div>

</div>
@code {
    [Parameter]
    public string placeId { get; set; }
    public Place place { get; set; }

    private bool isRated { get; set; }

    protected override void OnInitialized()
    {

        place = Model.GetPlaces().FirstOrDefault(p => (p.id == long.Parse(placeId)));


    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
            await Map.InitMapMarkerAsync(long.Parse(placeId));
    }


    public async Task OnChange(int rating, string name)
    {
        await Model.AddPlaceRatingAsync(long.Parse(placeId), rating);
    }


}
